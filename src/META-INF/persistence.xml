<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
	<persistence-unit name="Tarea_EclipseLink">
	<!--ESTE ES OBLIGATORIO DE ECLISELINK, ES SU IMPLEMENTACION-->
        <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
 
     <!--AQUI PONEMOS LAS CLASES QUE QUERMOS MAPEAR CON LAS TABLAS, sera una lista de pojos en el futuro-->
        <class>beans.EntityPersona</class>

    <!--PROPIEDADES VARIAS DE CONFIGURACION, vienen un poco explicadas, no hace falta ponerlas todas-->
        <properties>
    
        <!-- Configuracion para el driver de conexion . -->
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver" />
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/churrera" />
            <property name="javax.persistence.jdbc.user" value="root" />
            <property name="javax.persistence.jdbc.password" value="root" />

            <!-- Optimize database writes to use batching. -->
            <property name="eclipselink.jdbc.batch-writing" value="JDBC" />
            
            <!-- Avoids flush being triggered before every query execution. -->
            <property name="eclipselink.persistence-context.flush-mode" value="COMMIT" />

            <!-- Configure connection pool. -->
            <property name="eclipselink.jdbc.connections.initial" value="1" />
            <property name="eclipselink.jdbc.connections.min" value="64" />
            <property name="eclipselink.jdbc.connections.max" value="64" />
 

            <!-- To drop and replace existing schema this can be used. -->
            <property name="eclipselink.ddl-generation" value="drop-and-create-tables" />

        </properties>
	</persistence-unit>
</persistence>
